import {CGFobject} from '../lib/CGF.js';
/**
 * MyUnitCube
 * @constructor
 * @param scene - Reference to MyScene object
 */
export class MyUnitCube extends CGFobject {
	constructor(scene) {
		super(scene);
		this.initBuffers();
	}
	
	initBuffers() {
		this.vertices = [
			-0.5,-0.5,-0.5, //0
            0.5,-0.5,-0.5, //1
            -0.5,0.5,-0.5, //2
            0.5,0.5,-0.5, //3
            -0.5,-0.5,0.5, //4
            0.5,-0.5,0.5, //5
            -0.5,0.5,0.5, //6
            0.5,0.5,0.5,  //7
			//
			-0.5,-0.5,-0.5, //0
            0.5,-0.5,-0.5, //1
            -0.5,0.5,-0.5, //2
            0.5,0.5,-0.5, //3
            -0.5,-0.5,0.5, //4
            0.5,-0.5,0.5, //5
            -0.5,0.5,0.5, //6
            0.5,0.5,0.5,  //7
			//
			-0.5,-0.5,-0.5, //0
            0.5,-0.5,-0.5, //1
            -0.5,0.5,-0.5, //2
            0.5,0.5,-0.5, //3
            -0.5,-0.5,0.5, //4
            0.5,-0.5,0.5, //5
            -0.5,0.5,0.5, //6
            0.5,0.5,0.5,  //7
		];

		//Counter-clockwise reference of vertices
		this.indices = [
			0, 2, 1,
			1, 2, 3,
            4, 5, 6,
            5, 7, 6,
            0, 5, 4,
            0, 1, 5,
            2, 6, 7,
            2, 7, 3,
            1, 3, 5,
            3, 7, 5,
            0, 4, 2,
            2, 4, 6,
			//
			8, 10, 9,
			9, 10, 11,
            12, 13, 14,
            13, 15, 14,
            8, 13, 12,
            8, 9, 13,
            10, 14, 15,
            10, 15, 11,
            9, 11, 13,
            11, 15, 13,
            8, 12, 10,
            10, 12, 14,
			//
			16, 18, 17,
			17, 18, 19,
            20, 21, 22,
            21, 23, 22,
            16, 21, 20,
            16, 17, 21,
            18, 22, 23,
            18, 23, 19,
            17, 19, 21,
            19, 23, 21,
            16, 20, 18,
            18, 20, 22
		];

		this.normals = [
			0, 0, -1, //0
			0, 0, -1, //1
			0, 0, -1, //2
			0, 0, -1, //3
			0, 0, 1, //4
			0, 0, 1, //5
			0, 0, 1, //6
			0, 0, 1, //7
			//
			0, -1, 0, //0
			0, -1, 0, //1
			0, 1, 0, //2
			0, 1, 0, //3
			0, -1, 0, //4
			0, -1, 0, //5
			0, 1, 0, //6
			0, 1, 0, //7
			//
			-1, 0, 0, //0
			1, 0, 0, //1
			-1, 0, 0, //2
			1, 0, 0, //3
			-1, 0, 0, //4
			1, 0, 0, //5
			-1, 0, 0, //6
			1, 0, 0 //7
		]

		//The defined indices (and corresponding vertices)
		//will be read in groups of three to draw triangles
		this.primitiveType = this.scene.gl.TRIANGLES;

		this.initGLBuffers();
	}
}

